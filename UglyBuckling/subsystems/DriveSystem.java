// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc6329.UglyBuckling.subsystems;

import org.usfirst.frc6329.UglyBuckling.Robot;
import org.usfirst.frc6329.UglyBuckling.RobotMap;
import org.usfirst.frc6329.UglyBuckling.commands.*;

import edu.wpi.first.wpilibj.DriverStation;
import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;
import edu.wpi.first.wpilibj.networktables.NetworkTable;



/**
 *
 */
public class DriveSystem extends Subsystem {

    private final RobotDrive robotDrive = RobotMap.driveSystemRobotDrive;
    public double speed;
    public double turn;
    public double x;
    public double y;
    public double centerX;
    double Kp = 0.03;
    public boolean BrownOut;
    public boolean GoForward = true;
	NetworkTable table = NetworkTable.getTable("GRIP");
	public double leftspeed;
	public double rightspeed;
   


    public void initDefaultCommand() {
        setDefaultCommand(new JoystickDrive());
    }
    
    public void driveWithJoysticks(double leftJoystick, double rightJoystick) {
    	
    	BrownOut = DriverStation.getInstance().isBrownedOut();
    	
    	if (BrownOut == false) {
        	speed = leftJoystick;
        	turn = -rightJoystick;
   			}
    	else {
    		turn = -rightJoystick/1.5;
    		speed = leftJoystick/1.5;
    		}
    	
    	leftspeed = speed + turn;
    	rightspeed = speed - turn;
    	
    	if (GoForward == true) {
    		robotDrive.arcadeDrive(-speed,turn);
    		//Robot.driveSystem.robotDrive.tankDrive(-leftspeed, -rightspeed + 0.05);
    		}
    	else if (GoForward == false) {
    		robotDrive.arcadeDrive(speed,turn);
    		//Robot.driveSystem.robotDrive.tankDrive(leftspeed, rightspeed - 0.05);
    		}
    } 
    
    public void stop() {
    	robotDrive.arcadeDrive(0, 0);
    }
    
    public void autoDrive(double left, double right) {
    	Robot.driveSystem.robotDrive.tankDrive(left, right);
    }
    
    public double getAngle() {
    	return Robot.gyro.getAngle();
    }
    
    public double getAcceleration() {
    	return Robot.gyro.getRate();
    }
    
    public double getCenterX() {
    	return table.getNumber("centerX", 0);
    }
    
    public void updateDashboard() {
    	SmartDashboard.putNumber("Gyro Rate", ( (int)getAcceleration()));
    	SmartDashboard.putNumber("Gyro Angle", ( (int)getAngle()));
    	SmartDashboard.putNumber("CenterX", ( (int)getCenterX()));

    }
}
