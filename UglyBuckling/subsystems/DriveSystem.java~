// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc6329.UglyBuckling.subsystems;

import org.usfirst.frc6329.UglyBuckling.RobotMap;
import org.usfirst.frc6329.UglyBuckling.commands.*;

import edu.wpi.first.wpilibj.DriverStation;
import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.Spark;
import edu.wpi.first.wpilibj.SpeedController;

import edu.wpi.first.wpilibj.command.Subsystem;


/**
 *
 */
public class DriveSystem extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private final SpeedController leftfront = RobotMap.driveSystemleftfront;
    private final SpeedController leftrear = RobotMap.driveSystemleftrear;
    private final SpeedController rightfront = RobotMap.driveSystemrightfront;
    private final SpeedController rightrear = RobotMap.driveSystemrightrear;
    private final RobotDrive robotDrive = RobotMap.driveSystemRobotDrive;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS


public double speed;
public double turn;
public double x;
public double y;
public boolean BrownOut;
    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        setDefaultCommand(new JoystickDrive());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        //Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }
    
    public void driveWithJoysticks(double leftJoystick, double rightJoystick) {
    	
    	BrownOut = DriverStation.getInstance().isBrownedOut();
    	
    	if (BrownOut == false) {
    		x = java.lang.Math.pow(0.5*rightJoystick,3);
        	y = java.lang.Math.pow(0.5*leftJoystick,3);
        	speed = y + 0.5*leftJoystick;
        	turn = x + 0.5*rightJoystick;
    	}
    	else {
    		turn = rightJoystick/4;
    		speed = leftJoystick/4;
    	}
    	robotDrive.arcadeDrive(-speed,-turn); 	
    } 
     
    public void stop() {
    	robotDrive.arcadeDrive(0, 0);
    }
    
    public void driveForward() {
	  robotDrive.arcadeDrive(0.7, 0);
    }
    
    public void driveSlow() {
	  robotDrive.arcadeDrive(0.3, 0);
    }
  
    public void turnRight() {
	  robotDrive.arcadeDrive(0,-0.5);
    }
  
    public void turnLeft() {
	  robotDrive.arcadeDrive(0, 0.5);
    }
}
