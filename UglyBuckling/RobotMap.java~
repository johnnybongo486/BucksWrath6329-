// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc6329.UglyBuckling;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.Solenoid;
import edu.wpi.first.wpilibj.Spark;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.Victor;
import edu.wpi.first.wpilibj.VictorSP;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.livewindow.LiveWindow;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static SpeedController driveSystemleftfront;
    public static SpeedController driveSystemleftrear;
    public static SpeedController driveSystemrightfront;
    public static SpeedController driveSystemrightrear;
    public static RobotDrive driveSystemRobotDrive;
    public static SpeedController hopperIntakeHopper;
    public static SpeedController launcherlauncherESC;
    public static SpeedController launcherbrushESC;
    public static SpeedController winchWinchEsc;
    public static Solenoid winch2WinchSol;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        driveSystemleftfront = new Spark(0);
        LiveWindow.addActuator("Drive System", "left front ", (Spark) driveSystemleftfront);
        
        driveSystemleftrear = new Spark(1);
        LiveWindow.addActuator("Drive System", "left rear", (Spark) driveSystemleftrear);
        
        driveSystemrightfront = new Spark(2);
        LiveWindow.addActuator("Drive System", "right front", (Spark) driveSystemrightfront);
        
        driveSystemrightrear = new Spark(3);
        LiveWindow.addActuator("Drive System", "right rear", (Spark) driveSystemrightrear);
        
        driveSystemRobotDrive = new RobotDrive(driveSystemleftfront, driveSystemleftrear,
              driveSystemrightfront, driveSystemrightrear);
        
        driveSystemRobotDrive.setSafetyEnabled(true);
        driveSystemRobotDrive.setExpiration(0.1);
        driveSystemRobotDrive.setSensitivity(0.5);
        driveSystemRobotDrive.setMaxOutput(1.0);

        hopperIntakeHopper = new VictorSP(6);
        LiveWindow.addActuator("Hopper Intake", "Hopper", (VictorSP) hopperIntakeHopper);
        
        launcherlauncherESC = new VictorSP(8);
        LiveWindow.addActuator("Launcher", "launcherESC", (VictorSP) launcherlauncherESC);
        
        launcherbrushESC = new Victor(9);
        LiveWindow.addActuator("Launcher", "brushESC", (Victor) launcherbrushESC);
        
        winchWinchEsc = new VictorSP(7);
        LiveWindow.addActuator("Winch", "WinchEsc", (VictorSP) winchWinchEsc);
        
        winch2WinchSol = new Solenoid(0, 0);
        LiveWindow.addActuator("Winch 2", "WinchSol", winch2WinchSol);
        

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
}
